#import the Flask class, request, and response
from flask import Flask
from flask import request 
from flask import make_response 

#import module uuid to create user & rooms
import uuid
import random
import string

#import os to create directories
import os

#import subproces for room creation
import subprocess

#import html to sanitize user input
import html

#import passlib apache for .htaccess files
from passlib.apache import HtpasswdFile

#create an instance of this class
app = Flask(__name__)


@app.route("/app/create_private")
def create_private():
    room_type = "private"
    the_domain = "{{ my_fqdn }}"
    the_uuid = str(uuid.uuid4())
    letters = string.ascii_letters
    digits = string.digits
    chars = letters + digits
    user = "".join(random.choices(chars, k=20))
    passwd = "".join(random.choices(chars, k=30))
    password_file_path = "./passwds/" + the_uuid + ".htpasswd"
    ht = HtpasswdFile(password_file_path, new=True, default_scheme="bcrypt")
    ht.set_password(user, passwd)
    ht.save()
    command = 'sudo /var/www/' + the_domain + '/app/create_room.sh ' + room_type + ' ' + the_uuid + ' ' +  the_domain
    shell_result = subprocess.call([command], shell=True)
    url = "https://" + the_uuid + ".{{ my_fqdn }}"
    server_name = the_uuid + ".{{ my_fqdn }}"
    return "<h6>User : " + user + "</h6><br>" + "<h6>Password : " + passwd + "</h6><br>" + "<h6>URL : " + url + "</h6><br>" + "<h6>Direct link : <a href=\"" + url + "\">" + url + "</h6>"


@app.route("/app/create_public")
def create_public():
    room_type = "public"
    the_domain = "{{ my_fqdn }}"
    the_uuid = str(uuid.uuid4())
    command = 'sudo /var/www/' + the_domain + '/app/create_room.sh ' + room_type + ' ' + the_uuid + ' ' +  the_domain
    shell_result = subprocess.call([command], shell=True)
    url = 'https://' + the_uuid + '.' + the_domain
    return "<h6>URL : " + url + "</h6><br>" + "<h6>Direct link : <a href=\"" + url + "\">" + url + "</h6>"



@app.route("/app/post", methods=['GET', 'POST'])
def post():
    print(request.form)
    client_message = request.form['message']
    user_name = request.form['user_name']
    client_ip = request.environ.get('HTTP_X_REAL_IP', request.remote_addr)
    referer = request.referrer
    print(client_ip + ':' + client_message)
    room = referer.replace("https://","").replace(".{{ my_fqdn }}","").replace("/","")
    path_to_room = '/var/www/{{ my_fqdn }}/app/rooms/' + room + '/conversation.txt'
    client_message = html.escape(client_message)
    user_name = html.escape(user_name)
    formatted_message = user_name + ' : ' + client_message + '<br>'
    file = open(path_to_room, "a")
    file.write(formatted_message)
    file.close
    res = make_response("OK")
    return res

@app.route("/app/quit", methods=['GET', 'POST'])
def quit():
  print(request.form)
  user_name = request.form['user_name']
  user_name = html.escape(user_name)
  referer = request.referrer
  room = referer.replace("https://","").replace(".{{ my_fqdn }}","").replace("/","")
  path_to_room = '/var/www/{{ my_fqdn }}/app/rooms/' + room + '/conversation.txt'
  formatted_message = '=> ' + user_name + ' has quit the room' + '\n'
  print(formatted_message)
  file = open(path_to_room, "a")
  file.write(formatted_message)
  file.close
  res = make_response("OK")
  return res


@app.route("/app/destroy", methods=['GET', 'POST'])
def destroy():
  print(request.form)
  the_domain = "{{ my_fqdn }}"
  user_name = request.form['user_name']
  user_name = html.escape(user_name)
  referer = request.referrer
  the_uuid = referer.replace("https://","").replace(".{{ my_fqdn }}","").replace("/","")
  command = 'sudo /var/www/' + the_domain + '/app/destroy_room.sh ' + user_name + ' ' + the_uuid + ' ' +  the_domain
  shell_result = subprocess.call([command], shell=True)
  return "<h6>OK BOSS</h6>" 


@app.route("/app/upload", methods=['GET', 'POST'])
def upload():
  file_data = request.files['file']
  print(file_data)
  user_name = request.form['user_name']
  user_name = html.escape(user_name)
  referer = request.referrer
  room = referer.replace("https://","").replace(".{{ my_fqdn }}","").replace("/","")
  path_to_room = '/var/www/{{ my_fqdn }}/app/rooms/' + room + '/conversation.txt'
  path_to_file = '/var/www/{{ my_fqdn }}/app/rooms/' + room + '/files/' + file_data.filename
  public_path_to_file = 'https://' + room + '.{{ my_fqdn }}/files/' + file_data.filename
  print(path_to_file)
  print(public_path_to_file)
  file_data.save(path_to_file)
  formatted_message = '=> ' + user_name + ' have uploaded a file : ' + '<a href="' + public_path_to_file + '">' + file_data.filename + '</a><br>'
  print(formatted_message)
  file = open(path_to_room, "a")
  file.write(formatted_message)
  file.close
  res = make_response("OK")
  return res
